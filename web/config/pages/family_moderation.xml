<?xml version="1.0"?>
<page>
  <data>
    <left>
      <item>MyFamiliesModule</item>
    </left>
    <middle>
      <item>FamilyModerationModule</item>
    </middle>
    <right>
        <item>FamilyFacewallModule</item>
    </right>
    <javascripts>
      <item>roles.js</item>
      <item>ModalWindow.js</item>
    </javascripts>
    <page_css>
      <item>invite_modal.css</item>
    </page_css>
    <page_theme>Default</page_theme>
    <page_type>group</page_type>
    <page_template>container_three_column.tpl</page_template>
    <header_template>header_group.tpl</header_template>
    <page_mode>public</page_mode>
    <block_type>Homepage</block_type>
    <body_attributes></body_attributes>
    <access_permission>manage_groups</access_permission>
    <navigation_code></navigation_code>
    <boot_code><![CDATA[
      if($uid = $app->getRequestParam('uid')) {
        $user = new User();
        try {
          $user->load((int)$uid);
          $module_shared_data['user_info'] = $user;
        } catch(Exception $e) {
          $module_shared_data['user_info'] = null;
        }
      }
      if($gid = $app->getRequestParam('gid')) {
        try {
          $mode = $app->getRequestParam('mode');
          $group = ContentCollection::load_collection((int)$gid);
          $module_shared_data['group_info'] = $group;
          $member_type = Group::get_user_type(PA::$login_uid, (int)$gid);
          $module_shared_data['member_type'] = $member_type;
          $module_shared_data['members'] = Group::get_member_count($gid);
          $owner = new User();
          $owner->load((int)$module_shared_data['group_info']->author_id);
          $module_shared_data['author_picture'] = $owner->picture;
          $module_shared_data['author_name'] = $owner->login_name;
          $module_shared_data['access_type'] = ($module_shared_data['group_info']->reg_type == $module_shared_data['group_info']->REG_OPEN) ? ' Open': ' Moderated';
          $module_shared_data['total_groups'] = Group::get_total_groups();
          $module_shared_data['is_member'] = Group::member_exists($gid, PA::$login_uid);
          $module_shared_data['is_admin'] = Group::is_admin($gid, PA::$login_uid);

          $view_mode = $app->getRequestParam('view');

          $modes = array('members' => 'FamilyModerationModule',
/*          
                         'users'   => 'GroupModerateUserModule',
                         'content' => 'GroupModerateContentModule',
                         'invite'  => 'InvitationStatusModule'
*/                         
                         );

          if(!$view_mode || (!in_array($view_mode, array_keys($modes)))) {
            // When we doesn't found type
            $view_mode = 'members';
          }
          $app->setRequestParam('view', $view_mode);
          $module_name = $modes[$view_mode];
          $this->setting_data['middle'] = array($module_name);

          $module_shared_data['calendar_info']['assoc_type'] = "group";
          $module_shared_data['calendar_info']['assoc_id'] = $gid;
          $module_shared_data['calendar_info']['title'] = 'Group Events';
          $module_shared_data['calendar_info']['mode'] = PUB;

          if($member_type == NOT_A_MEMBER) {
            $module_shared_data['calendar_info']['may_edit'] = false;
          } else {
            $module_shared_data['calendar_info']['may_edit'] = true;
          }
        } catch(Exception $e) {
          $module_shared_data['group_info'] = null;
        }
      }
      if($nid = $app->getRequestParam('nid')) {
        try {
          $network = Network::get_by_id((int)$nid);
          $module_shared_data['network_info'] = $network;
          $extra = unserialize($network->extra);
          $module_shared_data['extra'] = $extra;
        } catch(Exception $e) {
          $module_shared_data['network_info'] = null;
          $module_shared_data['extra'] = null;
        }
      } else if(!empty(PA::$network_info)) {
        $module_shared_data['network_info'] = PA::$network_info;
        $extra = unserialize(PA::$network_info->extra);
        $module_shared_data['extra'] = $extra;
      } else {
        $module_shared_data['network_info'] = null;
        $module_shared_data['extra'] = null;
      }
      if($cid = $app->getRequestParam('cid')) {
        try {
          $content = Content::load_content((int)$cid, PA::$login_uid);
          $module_shared_data['content_info'] = $content;
        } catch(Exception $e) {
          $module_shared_data['content_info'] = null;
        }
      }
      uihelper_get_group_style($gid);
    ]]></boot_code>
  </data>
  <page_id>324</page_id>
  <page_name>Family Moderation</page_name>
  <is_configurable>0</is_configurable>
</page>
